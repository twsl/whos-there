name: Build

on: [push, pull_request]

jobs:

  build-and-test:
    name: "Build and Test"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -

    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install

    - name: Run style checks
      run: |
          poetry run isort --diff --check-only --settings-path pyproject.toml tests
          poetry run black --diff --check --config pyproject.toml tests
          poetry run darglint --verbosity 2 tests

    - name: Install plugin
      run: pip install pytest-github-actions-annotate-failures

    - name: Run tests
      run: |
        poetry run pytest -c pyproject.toml --cov-report=xml --cov-report=html --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=whos_there

    - name: Run safety checks
      run: |
        poetry check
        poetry run safety check --full-report
        poetry run bandit -ll --recursive hooks
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      if: ${{ always() }}

  publish:
    name: "Publish Unit Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: >
      always() &&
      github.event.workflow_run.conclusion != 'skipped' && (
        github.event.sender.login != 'dependabot[bot]' ||
        github.event.workflow_run.head_repository.full_name != github.repository
      )

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: github.event.sender.login != 'dependabot[bot]'
        with:
          files: artifacts/**/*.xml
