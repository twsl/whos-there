name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4.3.1
      with:
        python-version: "3.8"

    - name: Install poetry
      run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -

    - name: Set up cache
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Set build version from tag
      run: |
        poetry version $(git describe --tags --abbrev=0)

    - name: Build
      run: |
        poetry build

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ github.sha }}
        path: dist/

    - name: Show
      run: ls -l dist/

    - name: Publish
      run: |
        poetry publish -u "__token__" -p ${{ secrets.PYPI_API_TOKEN }}

  upload-packages:
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-${{ github.sha }}
        path: dist/

    - name: Upload to release
      uses: AButler/upload-release-assets@v2.0
      if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
      with:
        files: 'dist/*'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
